version: '3.8'

services:
  mysql:
    ports:
      - "127.0.0.1:${DB_PORT}:${DB_PORT}"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d  # Optional: to import .sql file

  redis:
    ports:
      - "127.0.0.1:${REDIS_PORT}:${REDIS_PORT}"

  zookeeper:
    ports:
      - "127.0.0.1:${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"

  kafka:
    ports:
      - "127.0.0.1:${KAFKA_PORT}:${KAFKA_PORT}"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  backend:
    image: bejoyjose/car_rental_backend:${IMAGE_TAG}
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - BUCKET_NAME=${BUCKET_NAME}
      - KAFKA_BOOTSTRAP_SERVER=${KAFKA_BOOTSTRAP_SERVER}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"

  frontend:
    image: bejoyjose/car_rental_angular:${IMAGE_TAG}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"

  gateway:
    image: bejoyjose/car_rental_gateway:${IMAGE_TAG}
    environment:
      - APP_CORS_ALLOWED_ORIGINS=${APP_CORS_ALLOWED_ORIGINS}
      - GATEWAY_SERVICE_URI=${GATEWAY_SERVICE_URI}
      - REDIS_HOST=${REDIS_HOST}
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"

  notification-service:
    build: ./car_rental_mailing
    container_name: car_rental_notification
    ports:
      - "${NOTIFICATION_PORT}:${NOTIFICATION_PORT}"
    environment:
        - MAIL_USERNAME=${MAIL_USERNAME}
        - MAIL_PASSWORD=${MAIL_PASSWORD}
        - SPRING_PROFILES_ACTIVE=docker
        - NOTIFICATION_PORT=${NOTIFICATION_PORT}
        - KAFKA_BOOTSTRAP_SERVER=${KAFKA_BOOTSTRAP_SERVER}
