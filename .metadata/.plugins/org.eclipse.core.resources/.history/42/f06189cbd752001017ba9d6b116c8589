package com.spring.carrentalapp.Car_Rental.utils;

import java.util.*;

import org.springframework.stereotype.Component;
import java.util.function.Function;
import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;

@Component
public class JWTUtil {

    public String extractUsername(String token) {
        return extractClaim(token, Claims::getSubject);
    }
    
    public String generateToken(String useDetails) {
        return generateToken(new HashMap<>(), useDetails);
    }

    public Boolean isValidateToken(String token, String useDetails) {
        final String username = extractUsername(token);
        return (username.equals(useDetails.getUsername())) && !isTokenExpired(token);
    }

    public <T> T extractClaim(String token, Function<Claims, T> claimsResolver) {
        final Claims claims = getAllClaimsFromToken(token);
        return claimsResolver.apply(claims);
    }
    
    
    private String createToken(Map<String, Object> claims, String subject) {
        return Jwts.builder()
                   .setClaims(claims)
                   .setSubject(useDetails.getUsername())
                   .setIssuedAt(new Date(System.currentTimeMillis()))
                   .setExpiration(new Date(System.currentTimeMillis() + 1000 * 60 *24))
                   .signWith(getSigninKey()), SignatureAlgorithm.HS256)
                   .compact();
    }
    
    private Date getAllClaimsFromToken(String token) {
        return Jwts.parserBuilder().setSigningKey(getSigningKey()).build().parseClaimsJws(token).getBody();
    }
    
    private Claims getAllClaimsFromToken(String token) {
        return Jwts.parserBuilder().setSigningKey(getSigningKey()).build().parseClaimsJws(token).getBody();
    }
}
